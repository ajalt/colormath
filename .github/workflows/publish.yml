name: Publish

on:
  push:
    paths-ignore:
      - '*.md'
    branches:
      - master

jobs:
  test:
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
    runs-on: ${{matrix.os}}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Cache gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run ubuntu tests
        if: matrix.os == 'ubuntu-latest'
        run: ./gradlew check

      - name: Run windows tests
        if: matrix.os == 'windows-latest'
        run: ./gradlew mingwX64Test

      - name: Run macOS tests
        if: matrix.os == 'macOS-latest'
        run: ./gradlew macosX64Test tvosX64Test iosX64Test

      - name: Bundle the build report
        if: failure()
        run: find . -type d -name 'reports' | zip -@ -r build-reports.zip

      - name: Upload the build report
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: error-report
          path: build-reports.zip

  deploy-mac-and-linux:
    needs: test
    runs-on: macos-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Fetch git tags
        run: git fetch origin +refs/tags/*:refs/tags/*

      - name: Cache gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Deploy to sonatype snapshots
        run: ./gradlew publish -PinferVersion=true
        env:
          ORG_GRADLE_PROJECT_SONATYPE_USERNAME: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_SONATYPE_PASSWORD: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_signingKey }}

  deploy-windows:
    needs: test
    runs-on: windows-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Fetch git tags
        run: git fetch origin +refs/tags/*:refs/tags/*

      - name: Cache gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Deploy to sonatype snapshots
        run: ./gradlew publishMingwX64PublicationToMavenRepository -PinferVersion=true
        env:
          ORG_GRADLE_PROJECT_SONATYPE_USERNAME: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_SONATYPE_PASSWORD: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_signingKey }}

env:
  GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=true -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"
